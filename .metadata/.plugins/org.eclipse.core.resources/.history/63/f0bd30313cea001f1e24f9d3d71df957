package br.com.hcm.ApiRestControleDeContatos.controller;

import java.util.List;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.hcm.ApiRestControleDeContatos.model.Contatos;
import br.com.hcm.ApiRestControleDeContatos.service.ContatoService;

@RestController
@RequestMapping("/api/contatos")
public class ContatoController {

	@Autowired
	private ContatoService contatoService;

	@PostMapping // POST http://localhost:8080/api/contatos
	public ResponseEntity<Contatos> save(@RequestBody Contatos contato) {
		Contatos newContato = contatoService.save(contato);	
		if (newContato != null) {
			return ResponseEntity.ok(newContato);
		} else {
			return ResponseEntity.badRequest().build();
		}
	}

	@GetMapping("/{id}") // GET http://localhost:8080/api/contatos/{id}
	public ResponseEntity<Optional<Contatos>> findById(@PathVariable Long id) {
		Optional<Contatos> contato = contatoService.findById(id);

		if (contato.isEmpty()) {
			return ResponseEntity.badRequest().build();
		} else {
			return ResponseEntity.ok(contato);
		}
	}

	@GetMapping("/pessoa/{id}") // GET http://localhost:8080/api/contatos/pessoa/{id}
	public ResponseEntity<List<Contatos>> findByIdPerson(@PathVariable Long id) {
			List<Contatos> contatos = contatoService.findAll(id);	
			
			if(contatos.isEmpty()) {
				return ResponseEntity.badRequest().build();
			} 
				return ResponseEntity.ok(contatos);
	}
	
	@PutMapping("/{id}") // PUT
	public ResponseEntity<Optional<Contatos>> update(@PathVariable Long id, @RequestBody Contatos contato) {
		Optional<Contatos> updContato = contatoService.update(contato);
	}
	
}
